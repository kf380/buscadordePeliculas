{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kevin\\\\Desktop\\\\buscadordePeliculas\\\\src\\\\pages\\\\Results\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Container, CircularProgress } from '@material-ui/core';\nimport queryString from 'query-string';\nimport { searchMovie } from '../../redux/actions/search';\nimport { movieResults, isSearchLoading } from '../../redux/selectors';\nimport MovieResult from '../../components/MovieResult';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(({\n  location\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const movies = useSelector(state => movieResults(state));\n  const isLoading = useSelector(state => isSearchLoading(state));\n  console.log(movies);\n  useEffect(() => {\n    const {\n      movieName\n    } = queryString.parse(location.search);\n    if (movieName && !movies) dispatch(searchMovie({\n      movieName\n    }));\n  });\n\n  const renderMovies = () => {\n    if (movies) {\n      return movies.map((value, index) => /*#__PURE__*/_jsxDEV(MovieResult, { ...value\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 47\n      }, this));\n    } else if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 400,\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: renderMovies()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}, \"I1iM/XYlMu7dnQkB9GilqP4tGmQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});","map":{"version":3,"sources":["C:/Users/Kevin/Desktop/buscadordePeliculas/src/pages/Results/index.js"],"names":["React","useEffect","useDispatch","useSelector","Container","CircularProgress","queryString","searchMovie","movieResults","isSearchLoading","MovieResult","location","dispatch","movies","state","isLoading","console","log","movieName","parse","search","renderMovies","map","value","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,SAAR,EAAmBC,gBAAnB,QAA0C,mBAA1C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,SAAQC,WAAR,QAA0B,4BAA1B;AACA,SAAQC,YAAR,EAAsBC,eAAtB,QAA4C,uBAA5C;AACA,OAAOC,WAAP,MAAwB,8BAAxB;;AAIA,kBAAc,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAAA;;AACzB,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,MAAM,GAAGV,WAAW,CAACW,KAAK,IAAGN,YAAY,CAACM,KAAD,CAArB,CAA1B;AACA,QAAMC,SAAS,GAAGZ,WAAW,CAACW,KAAK,IAAIL,eAAe,CAACK,KAAD,CAAzB,CAA7B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AAEAZ,EAAAA,SAAS,CAAC,MAAK;AACX,UAAM;AAAEiB,MAAAA;AAAF,QAAeZ,WAAW,CAACa,KAAZ,CAAkBR,QAAQ,CAACS,MAA3B,CAArB;AACA,QAAGF,SAAS,IAAI,CAACL,MAAjB,EACAD,QAAQ,CAACL,WAAW,CAAC;AAACW,MAAAA;AAAD,KAAD,CAAZ,CAAR;AACH,GAJQ,CAAT;;AAMA,QAAMG,YAAY,GAAE,MAAK;AACrB,QAAGR,MAAH,EAAU;AACN,aAAOA,MAAM,CAACS,GAAP,CAAW,CAACC,KAAD,EAAOC,KAAP,kBAAgB,QAAC,WAAD,OAA6BD;AAA7B,SAAkBC,KAAlB;AAAA;AAAA;AAAA;AAAA,cAA3B,CAAP;AACH,KAFD,MAEM,IAAIT,SAAJ,EAAc;AAChB,0BAAO,QAAC,gBAAD;AAAkB,QAAA,IAAI,EAAE,GAAxB;AAA6B,QAAA,KAAK,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,wBAAO;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAPD;;AASA,sBACI,QAAC,SAAD;AAAA,cACKM,YAAY;AADjB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA1BD;AAAA,UACqBnB,WADrB,EAEmBC,WAFnB,EAGsBA,WAHtB;AAAA","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Container, CircularProgress} from '@material-ui/core';\r\nimport queryString from 'query-string';\r\n\r\nimport {searchMovie} from '../../redux/actions/search';\r\nimport {movieResults, isSearchLoading} from '../../redux/selectors'\r\nimport MovieResult from '../../components/MovieResult'\r\n\r\n\r\n\r\nexport default({location})=> {\r\n    const dispatch = useDispatch();\r\n    const movies = useSelector(state=> movieResults(state));\r\n    const isLoading = useSelector(state => isSearchLoading(state));\r\n    console.log(movies)\r\n\r\n    useEffect(() =>{\r\n        const { movieName} = queryString.parse(location.search);\r\n        if(movieName && !movies)\r\n        dispatch(searchMovie({movieName}))\r\n    })\r\n    \r\n    const renderMovies =() =>{\r\n        if(movies){\r\n            return movies.map((value,index)=> <MovieResult key={index} {...value} />)\r\n        }else if (isLoading){\r\n            return <CircularProgress size={400} color=\"primary\" />\r\n        }\r\n        return <div />\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            {renderMovies()}\r\n        </Container>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}